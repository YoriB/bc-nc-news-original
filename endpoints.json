{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": [ "topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": 1527695953341
        }
      ]
    }
  },


"GET /api/articles/:article_id(comment count)" : {
  "description" : "Serves an article object containing the article by id specified",
  "queries" : [ "topic", "sort_by", "order"],
  "exampleResponse" : {
    "articles" : [
  {  
    "title": "Am I a cat?",
    "topic": "mitch",
    "author": "icellusedkars",
    "body": "Having run out of ideas for articles, I am staring at the wall blankly, like a cat. Does this make me a cat?",
    "created_at": "2020-01-15T22:21:00.000Z",
    "votes": 0,
    "article_img_url": "https://images.pexels.com/photos/158651/news-newsletter-newspaper-information-158651.jpeg?w=700&h=700"
   
        }
      ]
    }
  },


"GET /api/comments/:article_id" : {
  "description" : "Serves a comment object containing the article by id specified",
  "queries" : [],
  "exampleResponse" : {
    "comments" : [
      {
      "comment_id": 9,
      "body": "Superficially charming",
      "article_id": 1,
      "author": "icellusedkars",
      "votes": 0,
      "created_at": "2020-01-01T03:08:00.000Z"
    }
  ]
}
},

"POST /api/articles/:article_id/comments" : { 
    "description": "Accepts an object with username and body properties, and returns with the posted comment",
    "exampleInput": {
      "username": "exampleusernamehere",
      "body": "commentbody text here"
    },
    "queries": [],
    "exampleResponse": {
      "comment": {
        "comment_id": 789,
        "votes": 0,
        "created_at": "2020-01-01T03:08:00.000Z"
        "author": "exampleusernamehere",
        "body": "commentbody text here"
      }
    }
  },

  "PATCH /api/comments/:comment_id": {
    "description": "Accepts an object in the form { inc_votes: newVote }, which will indicate how much the votes property should be updated by. Responds with the updated comment",
    "exampleInput": { "inc_votes": 8 },
    "queries": [],
    "exampleResponse": {
      "comment": {
        "comment_id": 797,
        "votes": 0,
        "created_at": "2020-01-01T03:08:00.000Z",
        "author": "exampleusernamehere",
        "body": "commentbody text here"
  }
}
  },



  "DELETE /api/comments/:comment_id": {
    "description": "Serves a status 204 and no content when sending a delete request for a specified comment by id",
    "queries": [],
    "exampleResponse": "Status 204. Comment successfully deleted"
  }

}



    
